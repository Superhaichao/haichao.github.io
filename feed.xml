<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://superhaichao.github.io/</id><title>SuperChao</title><subtitle>A minimal, responsive, and powerful Jekyll theme for presenting professional writing.</subtitle> <updated>2022-07-31T22:49:15+08:00</updated> <author> <name></name> <uri>https://superhaichao.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://superhaichao.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://superhaichao.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator> <rights> © 2022 </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>聊聊 ReactiveCocoa 响应式编程</title><link href="https://superhaichao.github.io/posts/ReactiveCocoa/" rel="alternate" type="text/html" title="聊聊 ReactiveCocoa 响应式编程" /><published>2022-07-27T00:08:00+08:00</published> <updated>2022-07-31T22:48:49+08:00</updated> <id>https://superhaichao.github.io/posts/ReactiveCocoa/</id> <content src="https://superhaichao.github.io/posts/ReactiveCocoa/" /> <author> <name>superchao</name> </author> <category term="Blogging" /> <category term="Reactive" /> <summary> 作为一名iOS开发者，你所编写的每一行代码都是针对某些事件的反应，点击按钮、接收到的网络消息、属性改变(通过Key Value Observing)或通过 CoreLocation 改变用户位置都是很好的例子。 然而，这些事件都以不同的方式编码， 作为动作，委托，KVO，回调和其他。 ReactiveCocoa 为事件定义了一个标准接口，因此可以使用一组基本的工具更容易地链接、过滤和组合事件，相比之前的方式更加简单，ReactiveCocoa结合了两种编程风格: 函数式编程，利用高阶函数，即以其他函数为参数的函数; 响应式编程，关注数据流和变更传播; 由于这个原因，您可能听说过 ReactiveCocoa 被描述为函数响应式编程(或FRP)框架。 与传统编程对比 传统给按钮添加事件方式如下： - (void)viewDidLoad { [super view... </summary> </entry> </feed>
